package dataAccessLayer;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.TypedQuery;

import model.Game;
import model.Player;
import model.Team;
import model.TeamPlayer;

public class TeamDataAccess {

	public TeamDataAccess() {
		if(!EntityManagerHelper.em.getTransaction().isActive())
		  {
			EntityManagerHelper.em.getTransaction().begin();
		  }
	}
	
	public  static List<Team> listTeams() {
	    TypedQuery<Team> query =EntityManagerHelper.em.createQuery("SELECT t FROM Team t",Team.class);
		List<Team> result = new ArrayList<Team>();
		result = query.getResultList();
		for(Team p:result)
		{
			System.out.println(p.getName());
		}
		return result;
}
	
	public Team createNewTeam(String teamName,Game game) {
		Team newTeam=new Team();
		Game gamee = EntityManagerHelper.em.find(Game.class, game.getId());
		EntityManagerHelper.em.refresh(gamee);
		System.out.println("This game has "+gamee.getTeams().size()+" teams!");
		try {
			if(gamee.getTeams().size()==2)
			{
				System.out.println("This game already has teams");
			}
			else
			{
				newTeam.setName(teamName);
				newTeam.setGameBean(gamee);
				
				EntityManagerHelper.em.persist(newTeam);
				EntityManagerHelper.em.getTransaction().commit();
			}
		} catch (Exception ex) {
			System.out.println(ex.getMessage());
	
			return newTeam;
		}
		return null;
	}
	
	public Team addNewPlayer(Player player, Team team) {
		Team newTeam=new Team();
		return nreTeam;
	}
	public static void main(String[] args) {
		GameDataAccess gda=new GameDataAccess();	
		Game g=new Game();
		g=gda.listGames().get(0);
	//	createNewTeam("ccc",g);
	}
}
