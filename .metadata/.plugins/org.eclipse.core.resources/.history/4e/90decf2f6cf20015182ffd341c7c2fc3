package views;
import model.Game;
import model.GamePlayer;
import model.Player;
import model.TeamPlayer;

import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.el.ELContext;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import dataAccessLayer.GameDataAccess;

@ManagedBean(name = "nextGamesView")
@SessionScoped
public class NextGamesView implements Serializable{

	 private static final long serialVersionUID = 1L;
	    public static List<Game> games;
	    
	    @ManagedProperty("#{gameDataAccess}")
	    public GameDataAccess gamesData;
	    
	    private Game selectedGame;

	    public List<Game> getGames() {
	        return games;
	    }
	    
	    public void setGames(List<Game> game) {
	        games=game;
	    }
	 
		public GameDataAccess getGamesData() {
			return gamesData;
		}

		public void setGamesData(GameDataAccess gamesData) {
			this.gamesData = gamesData;
		}
		
		public Game getSelectedGame() {
	        return selectedGame;
	    }
	 
		public void setSelectedGame(Game selectedGame) {
			this.selectedGame = selectedGame;
		}
		
		public void play(Game game) {
			System.out.println("PlayGame!");
			ELContext elContext = FacesContext.getCurrentInstance().getELContext();
			LoginView firstBean = (LoginView) elContext.getELResolver().getValue(elContext, null, "loginView");
			GameDataAccess gda=new GameDataAccess();
			gda.playGame(game, firstBean.getCurrentPlayer());
			System.out.println("Done");
		}
		
		public void remove(Game game) {
			System.out.println("Remove game "+game.getId());
			GameDataAccess gda=new GameDataAccess();
			gda.removeGame(game.getId());

		}
		
		public void viewTeams(Game game)
		{
			this.setSelectedGame(game);
			ELContext elContext = FacesContext.getCurrentInstance().getELContext();
			LoginView firstBean = (LoginView) elContext.getELResolver().getValue(elContext, null, "loginView");
			
			ExternalContext context = FacesContext.getCurrentInstance().getExternalContext();		
			
			if(firstBean.getCurrentPlayer().getType()==1)
			{
				try {
					context.redirect(context.getRequestContextPath() + "/faces/resources/teamsuser.xhtml");
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			else
			{
				TeamsView teamsBean = (TeamsView) elContext.getELResolver().getValue(elContext, null, "teamsView");
				
				if(game.getTeams()!=null)
				{
					if(game.getTeams().size()!=0)
					{
						System.out.println("This game has "+game.getTeams().size()+ " teams");
						if(game.getTeams().size()==2)
						{ 
							for(TeamPlayer tp:game.getTeams().get(0).getTeamPlayers())
							{
								for(Player p:teamsBean.themesSource)
								{
									teamsBean.themesSource.remove(p);
								}
								teamsBean.themesSource.add(tp.getPlayer());
							}
							for(TeamPlayer tp:game.getTeams().get(1).getTeamPlayers())
							{
								for(Player p:teamsBean.themesTarget)
								{
									teamsBean.themesTarget.remove(p);
								}
								teamsBean.themesTarget.add(tp.getPlayer());
							}
							teamsBean.setTeamOne(game.getTeams().get(0));
							teamsBean.setTeamTwo(game.getTeams().get(1));
							try {
								context.redirect(context.getRequestContextPath() + "/faces/resources/teamsadmin.xhtml");
							} catch (IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
						}
					}
					else
					{
						List<GamePlayer> gamePlayers=new ArrayList<GamePlayer>();
						gamePlayers=game.getGamePlayers();
					
						for(int i=0;i<(gamePlayers.size()/2);i++)
						{

							teamsBean.themesSource.add(gamePlayers.get(i).getPlayer());
						}
						for(int i=(gamePlayers.size()/2);i<gamePlayers.size();i++)
						{
							teamsBean.themesTarget.add(gamePlayers.get(i).getPlayer());
						}

						try {
							context.redirect(context.getRequestContextPath() + "/faces/resources/teamsadmin.xhtml");
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
				}
			}
		}

		
}

