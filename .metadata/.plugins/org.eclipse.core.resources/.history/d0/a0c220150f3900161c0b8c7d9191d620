package views;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import dataAccessLayer.GameDataAccess;
import dataAccessLayer.PlayerDataAccess;
import model.Player;
	 
	@ManagedBean
	@SessionScoped
	public class AutoCompleteView {

	    private List<Player> allPlayers;
	    private Player selectedPlayer;
	    
	    public Player getSelectedPlayer() {
			return selectedPlayer;
		}

		public void setSelectedPlayer(Player selectedPlayer) {
			this.selectedPlayer = selectedPlayer;
		}
	
	    @PostConstruct
		public void init() {
			allPlayers=PlayerDataAccess.ListAllPlayers();
			this.selectedPlayer=new Player();
		}
	    
	    public List<Player> completeTheme(String query) {
	        List<Player> filteredPlayers = new ArrayList<Player>();
	         
	        for(Player p:allPlayers)
	        {
	        	if(p.getUsername().toLowerCase().startsWith(query))
	        	{
	        		filteredPlayers.add(p);	
	        	}
	        }	     
	        return  filteredPlayers;
	    }

		public void addPlayerToGame()
		{
			System.out.println("Selected player:" +this.selectedPlayer.toString());
			ELContext elContext = FacesContext.getCurrentInstance().getELContext();
			TeamsView firstBean = (TeamsView) elContext.getELResolver().getValue(elContext, null, "teamsView");
			System.out.println(firstBean.getGame().getId());
			NextGamesView nextGamesView=(NextGamesView)elContext.getELResolver().getValue(elContext, null, "nextGamesView");
			System.out.println("Max number of players"+nextGamesView.MAXNUMBEROFPLAYERS);
			if(firstBean.getGame().getPlayers().size()>=nextGamesView.MAXNUMBEROFPLAYERS)
			{
				FacesContext.getCurrentInstance().addMessage(null,
						new FacesMessage(FacesMessage.SEVERITY_WARN, null,"There are already "+nextGamesView.MAXNUMBEROFPLAYERS+" players! You can not add new player!"));
			}
			else
			{
				GameDataAccess.PlayGame(firstBean.getGame().getId(), this.selectedPlayer.getId());
				nextGamesView.generateTeams(firstBean.getGame().getId());
				FacesContext.getCurrentInstance().addMessage(null,
						new FacesMessage(FacesMessage.SEVERITY_INFO, null,"Player "+this.selectedPlayer.getUsername()+ " added to game!"));
			}	
		}
}