package views;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import org.primefaces.event.RateEvent;

import dataAccessLayer.PlayerDataAccess;
import model.Player;

@ManagedBean(name = "playersView")
@SessionScoped
public class PlayersView implements Serializable{

	private static final long serialVersionUID = 1L;

	private int rating;
	
	public int getRating() {
		return rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	public List<Player> players;

    private Player selectedPlayer;

	public List<Player> getPlayers() {
		return this.players;
	}

	public void setPlayers(List<Player> players) {
		this.players = players;
	}

	public Player getSelectedPlayer() {
		return selectedPlayer;
	}

	public void setSelectedPlayer(Player selectedPlayer) {
		this.selectedPlayer = selectedPlayer;
	}
	
	public void remove(Player player) {
		if(PlayerDataAccess.RemovePlayer(player.getId())==true)
		{
			FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(FacesMessage.SEVERITY_INFO, "INFO!", "Player "+player.getUsername()+" successfully removed!"));
			players.remove(player);
		}
		else
		{
			FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, "WARN!", "Could not remove player "+player.getUsername()));
		}			
	}
	
	public void  addPlayerToChart(Player player)
	{
		ELContext elContext = FacesContext.getCurrentInstance().getELContext();
		ChartView chartView = (ChartView) elContext.getELResolver().getValue(elContext, null, "chartView");	
		chartView.addPlayerToChart(player);
		System.out.println("Players from ChartView");
		for(Player p:chartView.getPlayers())
		{
			System.out.println(p.toString());
		}
	}
	
	public void onrate(Player player) {
		System.out.println(player.getId());
		System.out.println(player.getStars());
		System.out.println("Rating"+player.getRating());
        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, null, "Player " + player.getUsername()+" rated to "+player.getStars()+" stars!");
        FacesContext.getCurrentInstance().addMessage(null, message);
        System.out.println("On rate event");
    }
     
    public void oncancel() {
        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, "Cancel Event", "Rate Reset");
        FacesContext.getCurrentInstance().addMessage(null, message);
        System.out.println("On cancel event");
    }
	
	@PostConstruct
	public void init() {
		this.players=new ArrayList<Player>();
	    this.players=PlayerDataAccess.ListAllPlayers();
	    this.rating=4;
	}
}